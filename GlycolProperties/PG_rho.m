function [y1] = PG_rho(x1)
%PG_RHO neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 05-Feb-2019 22:10:41.
% 
% [y1] = PG_rho(x1) takes these arguments:
%   x = 2xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [243.2;0.005081];
x1_step1.gain = [0.0250312891113892;0.040004065213107];
x1_step1.ymin = -1;

% Layer 1
b1 = [-0.18478892061265606;0.0812227135845425;-0.071714205939697712;-0.089777657532385868;0.06968963084391018;1.0286637510229675;-0.50499912847068007;0.11699720819507227;-0.079332290830839605;-0.087536883907788937;-0.147969529879249;0.083047291600484116];
IW1_1 = [-0.087356460345318077 -0.0099668433319954307;0.055498642553062597 0.066265532217067366;-0.049523027589830994 -0.038245618426932977;0.63312463811775943 0.11884786945567336;0.048123581607773365 0.031932262265963719;0.65505603757200837 0.41321084872333319;0.3095498945551271 -0.85511517139351245;0.070611854508166899 0.053344656724115834;-0.054329848702972271 -0.058478213817636036;-0.058220688859133528 -0.049706311452268545;-0.077859058758137145 0.021375460771059066;0.055351408309970505 0.032805132766750622];

% Layer 2
b2 = [-0.079835337127588266;-0.07388989383307798;0.1145318319137742;-0.23774468581695299;0.061750733981082231;0.087903688959746998;-0.095675263997076099;0.064345219923569369;0.59511796647059023];
IW2_1 = [-0.066872472813203424 -0.0058552240220503893;-0.062616993162432563 -0.0064324389026291602;0.039046629616092052 0.8305073872083486;-0.1308139145204161 0.524824836112603;0.053864250637779713 0.0071529043074785624;0.072360972869690982 0.0047628994086935739;-0.077531975986446053 -0.003435431666595858;0.055803521104381894 0.007069725325383967;0.37469688524584488 0.13346308612831642];
LW2_1 = [0.018955983958239886 -0.008945297307588097 0.0081443676134911238 -0.014946814368868008 -0.0079436538210632644 0.08326262793320012 0.061187054786304672 -0.01239875784522469 0.0088257628821883354 0.0097018896694977905 0.015862353880403926 -0.009335128039093343;0.017623007026471276 -0.008389167494917563 0.0076105415116765364 -0.01409382381827972 -0.0074169053702303669 0.075973283781937309 0.056230049198510289 -0.011587159806759209 0.0082686808758137588 0.0090729614784522388 0.014711001212381771 -0.0087120432590974562;-0.03397383938334303 0.066173033604245188 -0.03948601278308355 0.014355097100493429 0.033684616845909843 0.2136071339731121 0.45152739913333301 0.061557972907551571 -0.058740470862057907 -0.05229422961849467 0.0025897506418259475 0.036401795888811581;0.04469669714050347 0.010875898993516644 0.0022233731559553843 -0.080628482415937952 -0.0051221992467532463 0.45210192482641265 -0.38174519477462238 -0.0050178813140896216 -0.0069701852937768295 0.00010307509134681664 0.055141994312431365 -0.0083765031485411919;-0.014876306995490291 0.0072161438807095621 -0.0065003255408713394 0.012200094814903958 0.0063242016081173445 -0.062027906650198257 -0.046425050595238389 0.0098923754906920288 -0.0070974722222218638 -0.0077596010195277731 -0.012363552687963615 0.0074197217703338347;-0.020742399516853367 0.0096642542840689547 -0.0088437487257355223 0.016112812152015411 0.0086360666142512362 -0.093206922016060914 -0.067984431177029334 0.013464744827353697 -0.0095494427845874297 -0.010524467398558493 -0.01741316274525908 0.0101565131377687;0.02244891102855703 -0.010331231776480215 0.0095015428907436663 -0.017236545810503292 -0.0092892079630668666 0.10306422350325292 0.07467051647092865 -0.014466824514822469 0.010223643219337263 0.011295979818811952 0.018905402720957372 -0.010932650322872961;-0.015469095078467172 0.0074752538482958444 -0.0067434940602021896 0.012612444155614373 0.0065630274779597316 -0.064982802649336813 -0.048504599747444289 0.010263052524509122 -0.0073554204527492527 -0.0080476055152977639 -0.012868294367239934 0.0077016869078556059;-0.148086709017867 0.074352142933909834 -0.061758484995577692 -0.17827020295311941 0.059165807379044102 0.90340547974464824 0.06926742892797301 0.1023195011246175 -0.071365999444044273 -0.076735542308496385 -0.11233630184955462 0.070187531990377777];

% Layer 3
b3 = [-0.27051448982023907;0.0878646563384331;0.15201439816956183;0.15192672194970713;0.062756221377586033;0.018505698938682168];
IW3_1 = [-0.14161497351182306 0.091199777279933253;0.039561138347977746 0.0089638540564420804;0.47974896892875457 0.1615075814275416;0.072358816752989136 0.011881626507411437;0.028006587038767339 0.0065986330383979493;0.0082231113287193486 0.0020019780246760925];
LW3_1 = [0.059041068963222434 -0.019697071660803957 0.020288120815588201 -0.14059817604565231 -0.020373315707562473 0.13822308635841279 0.16827026381243224 -0.03223148014670852 0.020168447932468074 0.023878962227763131 0.052129161857381923 -0.024600807169139538;-0.018764330808812634 0.0085880820517674622 -0.0076504562195431024 0.01661908325528284 0.0074306709554796211 -0.04314013289507769 -0.055962494992757378 0.012050340608539378 -0.0084193236411094791 -0.0092344655816158118 -0.015119992040556586 0.008780012322979442;-0.061417375378926865 0.042785965216143106 -0.035920526121664131 0.011084863080530267 0.034271912336100559 -0.45184224765265057 -0.17827182252744372 0.051388613757130476 -0.041255730279217133 -0.042868145205915115 -0.050094419762939837 0.039151673533182774;-0.032711626283436358 0.014714933931852447 -0.013232773533465093 0.035401903317182494 0.012879480247900059 -0.084616704440800147 -0.10304253271215554 0.020783205008897368 -0.014466470619210796 -0.015930483697580676 -0.026592319403838976 0.015228711457979631;-0.013386452320157246 0.0061439854311815117 -0.0054650581635804288 0.011412959944928802 0.0053063652971880159 -0.029808950416873554 -0.039447749787477206 0.0086126939205881797 -0.0060205111982571937 -0.0065994692370397396 -0.010772534049484521 0.0062694605947343522;-0.0039458770303076318 0.0018163743997789779 -0.0016134219970474488 0.0032620295308967797 0.0015661114771910029 -0.0085095473336200284 -0.011496800934938451 0.0025436254525274858 -0.0017791326594354944 -0.0019490755542191554 -0.0031718556075589167 0.0018501361483879136];
LW3_2 = [0.057411064747176964 0.052855275170052951 0.37964606342459528 0.18038860625767258 -0.04376010612614363 -0.063663459659154709 0.069795260937404818 -0.045689978804305809 -0.13115920353499319;-0.018010533803111375 -0.016610040726283509 -0.1092784142578615 -0.069300550885332698 0.013803073237858702 0.019920002416240024 -0.021782106232719901 0.014401120555248764 0.027351811848631963;-0.096727246644031595 -0.08925731836699928 -0.26321182840937757 -0.28729578167706188 0.074646159049809563 0.1066785636823666 -0.11636362037507382 0.077801290663581227 -0.86620831560063194;-0.032686703075115869 -0.030129833549525649 -0.20580762568485014 -0.12149819678278279 0.025018254551020629 0.036174217668747934 -0.039579486737379238 0.026106865575826615 0.052697802213181995;-0.012727638489991299 -0.011739630480419368 -0.076450864087341835 -0.049142086144486834 0.0097575106011035962 0.014074916590513025 -0.015388336114196072 0.010179804844139082 0.019200933308414277;-0.0037185392833941882 -0.0034302198134234445 -0.022107606372811086 -0.014379942542241045 0.0028517642864737624 0.004111501871350608 -0.0044944957582817675 0.0029750469135253529 0.0055937771120199188];

% Layer 4
b4 = -0.48741496124523859;
IW4_1 = [-0.2165036108899448 -0.05283087616769036];
LW4_1 = [0.10396038971886236 -0.047822478214792657 0.042465704090188655 -0.085690645981150268 -0.041218359049439067 0.22334292432716688 0.3025024843121597 -0.066991177839682642 0.046837333008010448 0.051312807816996639 0.083524537070869764 -0.048700682952773307];
LW4_2 = [0.097855730305242528 0.090267093830248044 0.58118596439567016 0.37839506523087807 -0.075038828966973517 -0.10820115078925359 0.1182843624546884 -0.078283830633840409 -0.14711032102218854];
LW4_3 = [0.60118703245427596 -0.18859025781922073 -0.93281357298011292 -0.34756728593645692 -0.13265091794481765 -0.038567776131020193];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0265604249667995;
y1_step1.xoffset = 988.7;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = tansig_apply(repmat(b2,1,Q) + IW2_1*xp1 + LW2_1*a1);

% Layer 3
a3 = tansig_apply(repmat(b3,1,Q) + IW3_1*xp1 + LW3_1*a1 + LW3_2*a2);

% Layer 4
a4 = repmat(b4,1,Q) + IW4_1*xp1 + LW4_1*a1 + LW4_2*a2 + LW4_3*a3;

% Output 1
y1 = mapminmax_reverse(a4,y1_step1);
%**************************************************
%Anurag Goyal Added on 2019-02-05
%Making sure that output is bound between training data
if(y1<988.7)
    y1=988.7;
elseif(y1>1064)
    y1=1064;
else
    y1=y1;
end
%**************************************************
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
